<h3>Home</h3>
{{#if errorsMessages.length}}
  <ul>
    {{#each errorsMessages}}
      <div id="error-messages">
        <li>{{this}}</li>  
      </div>
    {{/each}}
  </ul>
{{/if}}
<form action="/" method="GET" id="place-search-form">
    <div class="row">
        <div class="col">
            <div class="row row-cols-1 row-cols-sm-1 row-cols-md-2">
                <div class="col">
                    <input class="form-control md-6" type="search" placeholder="Search" aria-label="Search" id="place-search-bar">
                </div>

                <div class="col col-sm-8">
                    <select class="form-select md-6" aria-label=".form-select-lg example" id="place-search-select">
                        <option value="" selected>Open this select menu</option>
                        <option value="1">one</option>
                        <option value="2">Two</option>
                        <option value="3">Three</option>
                    </select>
                </div>

            </div>
        </div>
        <div class="col col-sm-4">
            <button class="btn btn-primary" type="submit" id="place-search-btn">
                <i class="bi bi-search"></i>
                Search
            </button>      
        </div>
    </div>
</form>
{{#if session.accountId}}
    <div class="col g-4">
        <a class="btn btn-primary" href="/place/create" id="place-create">
            Lägg till ett ställe
        </a>      
    </div>
{{/if}}
<nav class="navbar fixed-bottom navbar-light bg-light"  id="show-places-list-bar">
    <div class="container-fluid">
        <a class="btn btn-primary hidden" id="show-places-list-btn" href="#">Hide</a>
    </div>
</nav>


<div id="map" class="container-fluid"></div>

<div id="list-places" class="list-group">

</div>
<script>
    const searchButton = document.querySelector("#place-search-btn")
    const searchBarInput = document.querySelector("#place-search-bar")
    const searchSelect = document.querySelector("#place-search-select")
    const searchForm = document.querySelector("#place-search-form")
    const placesList = document.querySelector("#list-places")
    const listButton = document.querySelector("#show-places-list-btn")
    const mapContainer = document.querySelector("#map")
    const hiddenClassName = "hidden"
     const halvHiddenClassName ="halv-hidden" 


    let mapMarkers =[]
    const appUrl = document.querySelector("#digit-alla").getAttribute("href")
    function initMap() {

        // Map options
        var options = {
            zoom: 8,
            
            center: { lat: 57.7376924, lng: 14.1432979 }
        }

        // New map
        var map = new google.maps.Map(document.getElementById('map'), options);
        let lastclick 
        let infoWindow = null

        // Listen for click on map
        google.maps.event.addListener(map, 'click', function (event) {
            if(lastclick){
                lastclick.setMap(null)
            }
            if(infoWindow){
               infoWindow.close() 
            }
            lastclick = new google.maps.Marker({
                position: event.latLng,
                map: map,
            }); 
        });


        // Loop through markers
        function addAllmarkers(markers){
            const mapMarkers = []

            if(markers.length){
                for (const marker of markers) {
                // Add marker
                    const mapMarker = addMarker(marker);
                    mapMarkers.push(mapMarker)
                }
            }

            return mapMarkers
        }
        function removeAllMarkers(){
            for(const mapMarker of mapMarkers){
                mapMarker.setMap(null)
            }
            mapMarkers = []
        }

        // Add Marker Function
        function addMarker(props) {
            const lat = parseFloat(props.Lat)
            const lng = parseFloat(props.Lng)
            var marker = new google.maps.Marker({
                position: {lat,lng},
                map: map,
                //icon:props.iconImage
            });

            // Set icon image
            marker.setIcon(`https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png`);
            let mon = "<li>Måndag: <span id='open-time-closed'>Stängt </span></li>" 
            if(props.MonFrom.length != 0){mon =  "<li>Måndag: <span id='open-time-open'>"+props.MonFrom + " - "+ props.MonTo +" </span></li>"}
            let tue = "<li>Tisdag: <span id='open-time-closed'>Stängt </span></li>" 
            if(props.TueFrom.length != 0){tue =  "<li>Tisdag: <span id='open-time-open'>"+props.TueFrom + " - "+ props.TueTo +"</span></li>"}
            let wed = "<li>Onsdag: <span id='open-time-closed'>Stängt </span></li>" 
            if(props.WedFrom.length != 0){wed =  "<li>Onsdag: <span id='open-time-open'>"+props.WedFrom + " - "+ props.WedTo +"</span></li>"}
            let thu = "<li>Torsdag: <span id='open-time-closed'>Stängt </span></li>" 
            if(props.ThuFrom.length != 0){thu =  "<li>Torsdag: <span id='open-time-open'>"+props.ThuFrom + " - "+ props.ThuTo +"</span></li>"}
            let fri = "<li>Fredag: <span id='open-time-closed'>Stängt </span></li>" 
            if(props.FriFrom.length != 0){fri =  "<li>Fredag: <span id='open-time-open'>"+props.FriFrom + " - "+ props.FriTo +"</span></li>"}
            let sat = "<li>Lördag: <span id='open-time-closed'>Stängt </span></li>" 
            if(props.SatFrom.length != 0){sat =  "<li>Lördag: <span id='open-time-open'>"+props.SatFrom + " - "+ props.SatTo +"</span></li>"}
            let sun = "<li>Söndag: <span id='open-time-closed'>Stängt </span></li>" 
            if(props.SunFrom.length != 0){sun =  "<li>Söndag: <span id='open-time-open'>"+props.SunFrom + " - "+ props.SunTo +"</span></li>"}
            let note = ""
            if(props.Note){note = props.Note}
            function openInfoWindow(){
                if(infoWindow){
                    infoWindow.close()
                }

                infoWindow = new google.maps.InfoWindow({ content: 
                " <h6> "+props.PlaceName+" </h6> <p> Typ av hjälp: " + props.HelpType +
                "</p> <p id='open-time-note'> " + note + "</p> <ul> Öppettidder" + mon +
                    tue + wed + thu + fri + sat + sun + "</ul> <p>Telefonnummer: " + props.Phone + "</p><p> Adress: " +
                        props.Address + "</p> <p>" + props.Kommun + '</p> <p><a href ="' + props.Link + '">Gå till maps</a></p>'
            });

                infoWindow.open(map, marker);
            }                
            
            marker.addListener('click', function () {
                openInfoWindow()

            });

            const anchor = document.createElement('a')
            anchor.classList.add("list-group-item" )
            anchor.classList.add("list-group-item-action")
            anchor.setAttribute('href', "#")
            anchor.innerHTML = "<div class='row'><div class='col'> " +props.PlaceName+" </div><div class='col'> "
                +props.HelpType+" </div></div>"

            anchor.addEventListener('click', function (event) {
                openInfoWindow()

            });
            placesList.appendChild(anchor)
            

            return marker
        }
        async function getplaces(){
            const response = await fetch(appUrl+"/api/places/search?q="+searchBarInput.value.trim()+"+"+searchSelect.value)
            const places = await response.json()
            mapMarkers = addAllmarkers(places)

        }
        searchButton.addEventListener("click",function(event){
            event.preventDefault()
            removeAllMarkers()
            while (placesList.firstChild) {
            placesList.removeChild(placesList.lastChild);
            }
            getplaces()
            if(mapContainer.classList.contains(halvHiddenClassName)){

            }else{
                mapContainer.classList.add(halvHiddenClassName)
            }
            if(placesList.classList.contains(hiddenClassName)){
                placesList.classList.remove(hiddenClassName)

            }
            if(listButton.classList.contains(hiddenClassName)){
                listButton.classList.remove(hiddenClassName)
            }

        })

    }
    listButton.addEventListener("click",function(event){
        event.preventDefault()
        placesList.classList.toggle(hiddenClassName)
        mapContainer.classList.toggle(halvHiddenClassName)
        if(placesList.classList.contains(hiddenClassName)){
            listButton.innerText= "Show"
        }else{
            listButton.innerText= "Hide"
           
        }

    })
</script>
<script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDxo16CX5NB--hlg-kAC4ObldVeUd0ibvQ&callback=initMap">
</script>

<script>

    document.addEventListener("DOMContentLoaded", function () {
        const buttons = document.querySelectorAll(".nav-link")
        const buttonActiveClassName = "active"
        const homeButtons = document.querySelectorAll("#home-link")
        for (const button of homeButtons) {
            if (!button.classList.contains(buttonActiveClassName)) {

                button.classList.add(buttonActiveClassName)
            }
        }



    })

</script>